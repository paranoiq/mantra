{extends @layout.phtml}

{block #title}{$presenter->database}.{$presenter->collection} {t}select{/t} (Mantra){/block}

{block #h2}{t}Select items:{/t} {$presenter->collection}{/block}

{block #help}{t}help:{/t} <a href='http://www.mongodb.org/display/DOCS/Querying'>{t}Querying{/t}</a>,
    <a href='http://www.mongodb.org/display/DOCS/Mongo+Extended+JSON'>{t}Extended JSON{/t}</a>{/block}
{block #content}

<p>
<a href='{plink Collection:default}'>{t}Collection{/t}</a>
<a href='{plink Select:default}'>{t}Select{/t}</a>
<a href='{plink Update:default}'>{t}Update{/t}</a>
<a href='{plink Insert:default}'>{t}Insert{/t}</a>
<a href='{plink Import:default}'>{t}Import{/t}</a>
</p>

{?$form->render('begin')}
{?$form->render('errors')}

<fieldset><legend>{t}Query (JSON){/t}</legend>
    <div>{$form['query']->control}</div>
</fieldset>
<fieldset><legend>{t}Order{/t}</legend>
    <div>
    {foreach $form['key']->getComponents() as $n => $key}
        {$key->control} {$form['order'][$n]->control} {$form['order'][$n]->label}<br>
    {/foreach}
    {$form['more']->control} {$form['less']->control}
    </div>
</fieldset>
<fieldset><legend>{t}Limit{/t}</legend>
    <div>{$form['limit']->control}</div>
</fieldset>
<fieldset><legend>{t}Action{/t}</legend>
    <div>{$form['select']->control}</div>
</fieldset>
{?$form->render('end')}

<br>
{?$actionForm->render('begin')}
{?$actionForm->render('errors')}
{include @paginator.phtml}
<br>
<table cellspacing='0' class='data'>
<thead><td><input type='checkbox' onclick='$(":checkbox").attr("checked", true)'/></td><td>{t}Edit{/t}</td>
    <td>{t}Id{/t}</td><td>{t}Data{/t} &nbsp; <label><input type='checkbox' id='pre' checked /> {t}compact view{/t}</label></td></thead>
{foreach $items as $id => $item}
<tr>
    <td>{$actionForm['item'][$id]->control}</td>
    <td><a href='{plink Edit:default, database=>$presenter->database, collection=>$presenter->collection, id=>$id}'>{t}edit{/t}</a></td>
    <td><a href='{plink Show:default, id=>$id}'>{$id}</a></td>
    <td class='itemdata'>{!$item}</td>
</tr>
{/foreach}
</table>

{include @paginator.phtml}
&nbsp; ({$paginator->getItemCount()} items) {$actionForm['all']->control} {$actionForm['all']->label}<br>

<p>
    {$actionForm['update']->control}
    {$actionForm['clone']->control}
    {$actionForm['delete']->control}
    <span class='minifieldset'>
    {$actionForm['exportAction']->control}
    {$actionForm['exportFormat']->control}
    {$actionForm['export']->control}
    </span>
</p>
{?$actionForm->render('end')}

<div class='note'>
<h4>{t}Query operators:{/t}</h4>
<ul>
<li><code>$gt</code> - greater than &gt;
<li><code>$lt</code> - less than &lt;
<li><code>$gte</code> - greater than or equal ≥
<li><code>$lte</code> - less than or equal ≤
<li><code>$ne</code> - not equal ≠
<li><code>$mod</code> - modulo operator <code>{ a : { $mod : [ 10 , 1 ] } }</code>
</ul>
<ul>
<li><code>$in</code> - element value is in array
<li><code>$nin</code> - element value is not in array
<li><code>$all</code> - all values must match with array
</ul>
<ul>
<li><code>$exists</code> - matches if key exists
<li><code>$size</code> - matches array with n elements
<li><code>$type</code> - matches if value is of given type
<li><code>$elemMatch</code> - match on element in array
</ul>
<ul>
<li><code>$not</code> - negate condition (since MongoDB 1.3.3)
<li><code>$or</code> - alternative conditions (since MongoDB 1.5.3)
<li><code>$where</code> - javascript expression <code>{ $where: "this.a > 3" }</code>
</ul>

<h4>{t}Field operator:{/t}</h4>
<ul>
<li><code>$slice</code> - return subset of an array <code>{ comments: { $slice: [20, 10] } }</code>
</ul>
</div>

<script>
    $(document).ready( function() {
        $('#pre').click( function() { 
            if(this.checked) {
                $('.itemdata')
                    .css('white-space', 'normal')
                    .css('font-size',   'inherit')
                    .css('font-family', 'inherit');
            } else {
                $('.itemdata')
                    .css('white-space', 'pre')
                    .css('font-size',   '9pt')
                    .css('font-family', 'Consolas');
            }
        });
    });
</script>
